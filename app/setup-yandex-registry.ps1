# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Yandex Container Registry
param(
    [Parameter(Mandatory=$true)]
    [string]$RegistryId,
    
    [Parameter(Mandatory=$true)]
    [string]$FolderId
)

Write-Host "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Yandex Container Registry" -ForegroundColor Cyan
Write-Host "Registry ID: $RegistryId" -ForegroundColor Yellow
Write-Host "Folder ID: $FolderId" -ForegroundColor Yellow

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ YC CLI
Write-Host "`nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ YC CLI..." -ForegroundColor Yellow
try {
    $ycVersion = yc version 2>$null
    if ($ycVersion) {
        Write-Host "‚úÖ YC CLI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $ycVersion" -ForegroundColor Green
    } else {
        Write-Host "‚ùå YC CLI –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
        Write-Host "üì• –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ YC CLI: https://cloud.yandex.ru/docs/cli/quickstart" -ForegroundColor Yellow
        exit 1
    }
} catch {
    Write-Host "‚ùå YC CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Red
    Write-Host "üì• –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ YC CLI: https://cloud.yandex.ru/docs/cli/quickstart" -ForegroundColor Yellow
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
Write-Host "`nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏..." -ForegroundColor Yellow
try {
    $ycAuth = yc config list 2>$null
    if ($ycAuth) {
        Write-Host "‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞" -ForegroundColor Green
    } else {
        Write-Host "‚ùå –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞" -ForegroundColor Red
        Write-Host "üîë –í—ã–ø–æ–ª–Ω–∏—Ç–µ: yc init" -ForegroundColor Yellow
        exit 1
    }
} catch {
    Write-Host "‚ùå –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞" -ForegroundColor Red
    Write-Host "üîë –í—ã–ø–æ–ª–Ω–∏—Ç–µ: yc init" -ForegroundColor Yellow
    exit 1
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è Docker
Write-Host "`nüîë –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è Docker..." -ForegroundColor Yellow
try {
    $token = yc iam create-token 2>$null
    if ($token) {
        Write-Host "‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω" -ForegroundColor Green
        
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
        $env:DOCKER_REGISTRY_TOKEN = $token
        Write-Host "üîê –¢–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è DOCKER_REGISTRY_TOKEN" -ForegroundColor Green
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ–µ—Å—Ç—Ä–æ–º
        $registryUrl = "cr.yandex/$RegistryId"
        Write-Host "`nüê≥ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker –¥–ª—è —Ä–µ–µ—Å—Ç—Ä–∞: $registryUrl" -ForegroundColor Yellow
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Docker
        $dockerConfigPath = "$env:USERPROFILE\.docker\config.json"
        $dockerConfigDir = Split-Path $dockerConfigPath -Parent
        
        if (-not (Test-Path $dockerConfigDir)) {
            New-Item -ItemType Directory -Path $dockerConfigDir -Force
        }
        
        $dockerConfig = @{
            auths = @{
                "cr.yandex" = @{
                    auth = [Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes("oauth:$token"))
                }
            }
        }
        
        $dockerConfig | ConvertTo-Json -Depth 10 | Out-File -FilePath $dockerConfigPath -Encoding UTF8
        Write-Host "‚úÖ Docker –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ–µ—Å—Ç—Ä–æ–º" -ForegroundColor Green
        
    } else {
        Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω" -ForegroundColor Red
        exit 1
    }
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Ä–µ–µ—Å—Ç—Ä—É
Write-Host "`nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Ä–µ–µ—Å—Ç—Ä—É..." -ForegroundColor Yellow
try {
    $registryUrl = "cr.yandex/$RegistryId"
    $testResult = docker pull $registryUrl/hello-world 2>$null
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ä–µ–µ—Å—Ç—Ä—É —Ä–∞–±–æ—Ç–∞–µ—Ç" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è –†–µ–µ—Å—Ç—Ä –ø—É—Å—Ç –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ" -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚ö†Ô∏è –†–µ–µ—Å—Ç—Ä –ø—É—Å—Ç, –Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ" -ForegroundColor Yellow
}

Write-Host "`nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green
Write-Host "`nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" -ForegroundColor Cyan
Write-Host "1. –°–æ–±–µ—Ä–∏—Ç–µ –æ–±—Ä–∞–∑: docker build -f Dockerfile.yandex -t cr.yandex/$RegistryId/domeo-doors:latest ." -ForegroundColor White
Write-Host "2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –æ–±—Ä–∞–∑: docker push cr.yandex/$RegistryId/domeo-doors:latest" -ForegroundColor White
Write-Host "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª–∏: https://console.cloud.yandex.ru/folders/$FolderId/container-registry/registries/$RegistryId" -ForegroundColor White

Write-Host "`nüîß –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:" -ForegroundColor Cyan
Write-Host "DOCKER_REGISTRY_TOKEN=$token" -ForegroundColor White
Write-Host "REGISTRY_URL=cr.yandex/$RegistryId" -ForegroundColor White
Write-Host "IMAGE_NAME=domeo-doors" -ForegroundColor White


