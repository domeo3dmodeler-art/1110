# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ Docker –æ–∫—Ä—É–∂–µ–Ω–∏—è
Write-Host "üê≥ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ Docker –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Domeo Doors" -ForegroundColor Cyan

# –°–æ–∑–¥–∞–Ω–∏–µ .env.local —Ñ–∞–π–ª–∞
Write-Host "üìù –°–æ–∑–¥–∞–Ω–∏–µ .env.local —Ñ–∞–π–ª–∞..." -ForegroundColor Yellow
$envContent = @"
# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Docker —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
DATABASE_URL=postgresql://domeo_user:domeo_password@localhost:5432/domeo_doors
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production-min-32-chars
NODE_ENV=production
PORT=3000
HOSTNAME=0.0.0.0
NEXT_PUBLIC_APP_URL=http://localhost:3000
NEXT_PUBLIC_API_URL=http://localhost:3000/api
"@

$envContent | Out-File -FilePath ".env.local" -Encoding UTF8
Write-Host "‚úÖ .env.local —Å–æ–∑–¥–∞–Ω" -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..." -ForegroundColor Yellow
try {
    $dockerVersion = docker --version 2>$null
    if ($dockerVersion) {
        Write-Host "‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $dockerVersion" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop" -ForegroundColor Red
        Write-Host "üì• –°–∫–∞—á–∞–π—Ç–µ —Å: https://www.docker.com/products/docker-desktop/" -ForegroundColor Yellow
        exit 1
    }
} catch {
    Write-Host "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Red
    Write-Host "üì• –°–∫–∞—á–∞–π—Ç–µ Docker Desktop —Å: https://www.docker.com/products/docker-desktop/" -ForegroundColor Yellow
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose..." -ForegroundColor Yellow
try {
    $composeVersion = docker-compose --version 2>$null
    if ($composeVersion) {
        Write-Host "‚úÖ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $composeVersion" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º 'docker compose'" -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚ö†Ô∏è Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º 'docker compose'" -ForegroundColor Yellow
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker —Ñ–∞–π–ª–æ–≤..." -ForegroundColor Yellow
$requiredFiles = @("Dockerfile.yandex", "docker-compose.yandex.yml", "sql/yandex_cloud_schema.sql")
foreach ($file in $requiredFiles) {
    if (Test-Path $file) {
        Write-Host "‚úÖ $file –Ω–∞–π–¥–µ–Ω" -ForegroundColor Green
    } else {
        Write-Host "‚ùå $file –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
    }
}

Write-Host ""
Write-Host "–ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å:" -ForegroundColor Cyan
Write-Host "   docker-compose -f docker-compose.yandex.yml up --build" -ForegroundColor White
Write-Host ""
Write-Host "–ò–ª–∏ –ø–æ —à–∞–≥–∞–º:" -ForegroundColor Cyan
Write-Host "   1. docker-compose -f docker-compose.yandex.yml up postgres -d" -ForegroundColor White
Write-Host "   2. docker-compose -f docker-compose.yandex.yml up app --build" -ForegroundColor White
