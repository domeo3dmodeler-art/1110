const puppeteer = require('puppeteer');

async function testBrowserUI() {
  let browser;
  try {
    console.log('=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï UI –í –ë–†–ê–£–ó–ï–†–ï ===');
    
    browser = await puppeteer.launch({ 
      headless: false, // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
      defaultViewport: null,
      args: ['--start-maximized']
    });
    
    const page = await browser.newPage();
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–º–ø–æ—Ä—Ç–∞
    console.log('üåê –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–º–ø–æ—Ä—Ç–∞...');
    await page.goto('http://localhost:3000/admin/catalog/import', { 
      waitUntil: 'networkidle0',
      timeout: 30000 
    });
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await page.waitForTimeout(3000);
    
    // –ò—â–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–ú–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –¥–≤–µ—Ä–∏"
    console.log('üîç –ò—â–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–ú–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –¥–≤–µ—Ä–∏"...');
    await page.waitForSelector('[data-testid="category-select"], select, .category-select', { timeout: 10000 });
    
    // –ö–ª–∏–∫–∞–µ–º –Ω–∞ —Å–µ–ª–µ–∫—Ç–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const categorySelect = await page.$('select, [data-testid="category-select"], .category-select');
    if (categorySelect) {
      await categorySelect.click();
      await page.waitForTimeout(1000);
      
      // –ò—â–µ–º –æ–ø—Ü–∏—é "–ú–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –¥–≤–µ—Ä–∏"
      const doorOption = await page.$x("//option[contains(text(), '–ú–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –¥–≤–µ—Ä–∏')]");
      if (doorOption.length > 0) {
        await doorOption[0].click();
        console.log('‚úÖ –í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è "–ú–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –¥–≤–µ—Ä–∏"');
        await page.waitForTimeout(2000);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ—è–≤–∏–ª—Å—è –ª–∏ TemplateManager
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º TemplateManager...');
        const templateManager = await page.$('.template-manager, [data-testid="template-manager"]');
        if (templateManager) {
          console.log('‚úÖ TemplateManager –Ω–∞–π–¥–µ–Ω');
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—è —à–∞–±–ª–æ–Ω–∞
          const fields = await page.$$eval('.field-item, .template-field, [data-testid="template-field"]', 
            elements => elements.map(el => el.textContent?.trim()).filter(Boolean)
          );
          
          console.log(`üìã –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª–µ–π –≤ UI: ${fields.length}`);
          console.log('–ü–µ—Ä–≤—ã–µ 5 –ø–æ–ª–µ–π:');
          fields.slice(0, 5).forEach((field, i) => {
            console.log(`  ${i + 1}: "${field}"`);
            const hasQuestionMarks = field.includes('?');
            console.log(`     –°–æ–¥–µ—Ä–∂–∏—Ç –∑–Ω–∞–∫–∏ –≤–æ–ø—Ä–æ—Å–∞: ${hasQuestionMarks}`);
          });
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫—É —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
          const downloadButton = await page.$('button:has-text("–°–∫–∞—á–∞—Ç—å"), button:has-text("Download")');
          if (downloadButton) {
            console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –Ω–∞–π–¥–µ–Ω–∞');
          }
          
        } else {
          console.log('‚ùå TemplateManager –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }
      } else {
        console.log('‚ùå –û–ø—Ü–∏—è "–ú–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –¥–≤–µ—Ä–∏" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      }
    } else {
      console.log('‚ùå –°–µ–ª–µ–∫—Ç–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    
    // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    await page.screenshot({ path: 'ui_test_screenshot.png', fullPage: true });
    console.log('üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ ui_test_screenshot.png');
    
    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ UI –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ UI:', error);
  } finally {
    if (browser) {
      await browser.close();
    }
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ puppeteer
try {
  testBrowserUI();
} catch (error) {
  console.log('Puppeteer –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –±—Ä–∞—É–∑–µ—Ä–∞');
  console.log('–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏: npm install puppeteer');
}
