const XLSX = require('xlsx');
const fs = require('fs');
const path = require('path');

// –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π Excel —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞
function createTestExcel() {
    console.log('üìä –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–û–ì–û EXCEL –§–ê–ô–õ–ê');
    console.log('==================================');
    console.log('');

    // –ó–∞–≥–æ–ª–æ–≤–∫–∏ (–æ–Ω–∏ –∂–µ –ø–æ–ª—è —à–∞–±–ª–æ–Ω–∞)
    const headers = [
        '‚Ññ',
        'Domeo_–ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –¥–ª—è Web',
        '–ö–∞—Ç–µ–≥–æ—Ä–∏—è',
        '–¢–∏–ø –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏',
        'Domeo_–°—Ç–∏–ª—å Web',
        '–§–∞–±—Ä–∏–∫–∞_–ö–æ–ª–ª–µ–∫—Ü–∏—è',
        '–û–±—â–µ–µ_–¢–∏–ø –ø–æ–∫—Ä—ã—Ç–∏—è',
        'Domeo_–¶–≤–µ—Ç',
        '–§–∞–±—Ä–∏–∫–∞_–¶–≤–µ—Ç/–û—Ç–¥–µ–ª–∫–∞',
        '–®–∏—Ä–∏–Ω–∞/–º–º',
        '–í—ã—Å–æ—Ç–∞/–º–º',
        '–ï–¥.–∏–∑–º.',
        '–°–∫–ª–∞–¥/–∑–∞–∫–∞–∑',
        '–¶–µ–Ω–∞ —Ä—Ä—Ü (–≤–∫–ª—é—á–∞—è —Ü–µ–Ω—É –ø–æ–ª–æ—Ç–Ω–∞, –∫–æ—Ä–æ–±–∞, –Ω–∞–ª–∏—á–Ω–∏–∫–æ–≤, –¥–æ–±–æ—Ä–æ–≤)',
        '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
        '–ü–æ—Å—Ç–∞–≤—â–∏–∫',
        '–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
        '–¢–∏–ø –æ—Ç–∫—Ä—ã–≤–∞–Ω–∏—è',
        '–ö—Ä–æ–º–∫–∞',
        '–°—Ç–æ–∏–º–æ—Å—Ç—å –Ω–∞–¥–±–∞–≤–∫–∏ –∑–∞ –∫—Ä–æ–º–∫—É',
        '–ú–æ–ª–¥–∏–Ω–≥',
        '–°—Ç–µ–∫–ª–æ',
        '–¢–æ–ª—â–∏–Ω–∞/–º–º',
        '–¶–µ–Ω–∞ –æ–ø—Ç'
    ];

    // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    const testData = [
        [
            '1',
            'DomeoDoors_Test_1',
            '–ú–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –¥–≤–µ—Ä–∏',
            '–†–∞—Å–ø–∞—à–Ω–∞—è',
            '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è',
            'Moderno',
            '–ü–í–•',
            '–ë–µ–ª—ã–π',
            'CV –ë–µ–ª—ã–π',
            '800',
            '2000',
            '—à—Ç',
            '–ó–∞–∫–∞–∑–Ω–æ–µ',
            '45000',
            '–î–≤–µ—Ä—å –¢–µ—Å—Ç–æ–≤–∞—è 1',
            '–í–µ—Å—Ç–°—Ç–∞–π–ª',
            'test_door_1',
            '–ø—Ä—è–º–æ–µ',
            '–Ω–µ—Ç',
            '0',
            '–Ω–µ—Ç',
            '–Ω–µ—Ç',
            '38',
            '30000'
        ],
        [
            '2',
            'DomeoDoors_Test_2',
            '–ú–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –¥–≤–µ—Ä–∏',
            '–†–∞—Å–ø–∞—à–Ω–∞—è',
            '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è',
            'Classico',
            '–≠–∫–æ—à–ø–æ–Ω',
            '–î—É–±',
            'CV –î—É–±',
            '700',
            '2000',
            '—à—Ç',
            '–ó–∞–∫–∞–∑–Ω–æ–µ',
            '52000',
            '–î–≤–µ—Ä—å –¢–µ—Å—Ç–æ–≤–∞—è 2',
            '–í–µ—Å—Ç–°—Ç–∞–π–ª',
            'test_door_2',
            '–ø—Ä—è–º–æ–µ',
            '–¥–∞',
            '5000',
            '–¥–∞',
            '–Ω–µ—Ç',
            '40',
            '35000'
        ],
        [
            '3',
            'DomeoDoors_Test_3',
            '–ú–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –¥–≤–µ—Ä–∏',
            '–†–∞—Å–ø–∞—à–Ω–∞—è',
            '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è',
            'Moderno',
            '–ü–í–•',
            '–°–µ—Ä—ã–π',
            'CV –°–µ—Ä—ã–π',
            '900',
            '2100',
            '—à—Ç',
            '–ó–∞–∫–∞–∑–Ω–æ–µ',
            '48000',
            '–î–≤–µ—Ä—å –¢–µ—Å—Ç–æ–≤–∞—è 3',
            '–í–µ—Å—Ç–°—Ç–∞–π–ª',
            'test_door_3',
            '–ø—Ä—è–º–æ–µ',
            '–Ω–µ—Ç',
            '0',
            '–Ω–µ—Ç',
            '–¥–∞',
            '38',
            '32000'
        ],
        [
            '4',
            'DomeoDoors_Test_4',
            '–ú–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –¥–≤–µ—Ä–∏',
            '–†–∞—Å–ø–∞—à–Ω–∞—è',
            '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è',
            'Classico',
            '–≠–∫–æ—à–ø–æ–Ω',
            '–û—Ä–µ—Ö',
            'CV –û—Ä–µ—Ö',
            '600',
            '2000',
            '—à—Ç',
            '–ó–∞–∫–∞–∑–Ω–æ–µ',
            '55000',
            '–î–≤–µ—Ä—å –¢–µ—Å—Ç–æ–≤–∞—è 4',
            '–í–µ—Å—Ç–°—Ç–∞–π–ª',
            'test_door_4',
            '–ø—Ä—è–º–æ–µ',
            '–¥–∞',
            '3000',
            '–¥–∞',
            '–¥–∞',
            '40',
            '37000'
        ],
        [
            '5',
            'DomeoDoors_Test_5',
            '–ú–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –¥–≤–µ—Ä–∏',
            '–†–∞—Å–ø–∞—à–Ω–∞—è',
            '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è',
            'Moderno',
            '–ü–í–•',
            '–ß–µ—Ä–Ω—ã–π',
            'CV –ß–µ—Ä–Ω—ã–π',
            '800',
            '2000',
            '—à—Ç',
            '–ó–∞–∫–∞–∑–Ω–æ–µ',
            '46000',
            '–î–≤–µ—Ä—å –¢–µ—Å—Ç–æ–≤–∞—è 5',
            '–í–µ—Å—Ç–°—Ç–∞–π–ª',
            'test_door_5',
            '–ø—Ä—è–º–æ–µ',
            '–Ω–µ—Ç',
            '0',
            '–Ω–µ—Ç',
            '–Ω–µ—Ç',
            '38',
            '31000'
        ]
    ];

    // –°–æ–∑–¥–∞–µ–º —Ä–∞–±–æ—á—É—é –∫–Ω–∏–≥—É
    const workbook = XLSX.utils.book_new();
    
    // –°–æ–∑–¥–∞–µ–º —Ä–∞–±–æ—á–∏–π –ª–∏—Å—Ç
    const worksheetData = [headers, ...testData];
    const worksheet = XLSX.utils.aoa_to_sheet(worksheetData);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ª–∏—Å—Ç –≤ –∫–Ω–∏–≥—É
    XLSX.utils.book_append_sheet(workbook, worksheet, '–¢–æ–≤–∞—Ä—ã');
    
    // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
    const testDir = path.join(__dirname, '..', 'test_files');
    if (!fs.existsSync(testDir)) {
        fs.mkdirSync(testDir, { recursive: true });
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    const filename = 'test_doors_import.xlsx';
    const filepath = path.join(testDir, filename);
    XLSX.writeFile(workbook, filepath);
    
    console.log(`‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π Excel —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: ${filepath}`);
    console.log(`   –ó–∞–≥–æ–ª–æ–≤–∫–æ–≤: ${headers.length}`);
    console.log(`   –°—Ç—Ä–æ–∫ –¥–∞–Ω–Ω—ã—Ö: ${testData.length}`);
    console.log('');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–∞
    console.log('üìã –°–¢–†–£–ö–¢–£–†–ê –§–ê–ô–õ–ê:');
    console.log('-------------------');
    console.log('–ó–∞–≥–æ–ª–æ–≤–∫–∏:');
    headers.forEach((header, index) => {
        console.log(`   ${index + 1}. "${header}"`);
    });
    
    console.log('');
    console.log('üì¶ –¢–ï–°–¢–û–í–´–ï –î–ê–ù–ù–´–ï:');
    console.log('-------------------');
    testData.forEach((row, index) => {
        console.log(`–¢–æ–≤–∞—Ä ${index + 1}:`);
        console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${row[14]}`);
        console.log(`   SKU: ${row[16]}`);
        console.log(`   –°—Ç–∏–ª—å: ${row[4]}`);
        console.log(`   –¶–≤–µ—Ç: ${row[7]}`);
        console.log(`   –†–∞–∑–º–µ—Ä: ${row[9]}x${row[10]} –º–º`);
        console.log(`   –¶–µ–Ω–∞: ${row[13]} —Ä—É–±.`);
        console.log('');
    });
    
    // –°–æ–∑–¥–∞–µ–º —Ç–∞–∫–∂–µ CSV —Ñ–∞–π–ª –¥–ª—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const csvData = [headers, ...testData];
    const csvContent = csvData.map(row => 
        row.map(cell => `"${cell}"`).join(',')
    ).join('\n');
    
    const csvFilename = 'test_doors_import.csv';
    const csvFilepath = path.join(testDir, csvFilename);
    fs.writeFileSync(csvFilepath, csvContent, 'utf8');
    
    console.log(`‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π CSV —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: ${csvFilepath}`);
    console.log('');
    
    return {
        xlsx: filepath,
        csv: csvFilepath,
        headers: headers,
        data: testData
    };
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
const result = createTestExcel();

console.log('üéØ –¢–ï–°–¢–û–í–´–ï –§–ê–ô–õ–´ –ì–û–¢–û–í–´:');
console.log('==========================');
console.log(`üìä Excel: ${result.xlsx}`);
console.log(`üìÑ CSV: ${result.csv}`);
console.log('');
console.log('üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
console.log('1. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–º–ø–æ—Ä—Ç —á–µ—Ä–µ–∑ –Ω–æ–≤—ã–π API');
console.log('2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
console.log('3. –£–±–µ–¥–∏—Ç—å—Å—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–≤–æ–π—Å—Ç–≤');
console.log('4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏');
