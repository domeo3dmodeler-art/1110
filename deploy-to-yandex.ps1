# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è –≤ Yandex Container Registry
param(
    [Parameter(Mandatory=$true)]
    [string]$RegistryId,
    
    [Parameter(Mandatory=$false)]
    [string]$Tag = "latest",
    
    [Parameter(Mandatory=$false)]
    [string]$Dockerfile = "Dockerfile.yandex"
)

Write-Host "üöÄ –î–µ–ø–ª–æ–π –≤ Yandex Container Registry" -ForegroundColor Cyan
Write-Host "Registry ID: $RegistryId" -ForegroundColor Yellow
Write-Host "Tag: $Tag" -ForegroundColor Yellow
Write-Host "Dockerfile: $Dockerfile" -ForegroundColor Yellow

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
Write-Host "`nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..." -ForegroundColor Yellow
try {
    $dockerVersion = docker --version 2>$null
    if ($dockerVersion) {
        Write-Host "‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $dockerVersion" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
        exit 1
    }
} catch {
    Write-Host "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Red
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Dockerfile
Write-Host "`nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Dockerfile..." -ForegroundColor Yellow
if (Test-Path $Dockerfile) {
    Write-Host "‚úÖ Dockerfile –Ω–∞–π–¥–µ–Ω: $Dockerfile" -ForegroundColor Green
} else {
    Write-Host "‚ùå Dockerfile –Ω–µ –Ω–∞–π–¥–µ–Ω: $Dockerfile" -ForegroundColor Red
    exit 1
}

# –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–µ–Ω–∏ –æ–±—Ä–∞–∑–∞
$imageName = "cr.yandex/$RegistryId/domeo-doors:$Tag"
Write-Host "`nüì¶ –ò–º—è –æ–±—Ä–∞–∑–∞: $imageName" -ForegroundColor Cyan

# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞
Write-Host "`nüî® –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞..." -ForegroundColor Yellow
try {
    $buildResult = docker build -f $Dockerfile -t $imageName . 2>&1
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ –û–±—Ä–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω" -ForegroundColor Green
    } else {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –æ–±—Ä–∞–∑–∞:" -ForegroundColor Red
        Write-Host $buildResult -ForegroundColor Red
        exit 1
    }
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ –æ–±—Ä–∞–∑–∞: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
Write-Host "`nüîë –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏..." -ForegroundColor Yellow
if (-not $env:DOCKER_REGISTRY_TOKEN) {
    Write-Host "‚ö†Ô∏è –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è" -ForegroundColor Yellow
    Write-Host "üîß –ó–∞–ø—É—Å—Ç–∏—Ç–µ: .\setup-yandex-registry.ps1 -RegistryId $RegistryId -FolderId YOUR_FOLDER_ID" -ForegroundColor Yellow
    exit 1
}

# –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—Ä–∞–∑–∞
Write-Host "`nüì§ –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—Ä–∞–∑–∞ –≤ —Ä–µ–µ—Å—Ç—Ä..." -ForegroundColor Yellow
try {
    $pushResult = docker push $imageName 2>&1
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ –û–±—Ä–∞–∑ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ —Ä–µ–µ—Å—Ç—Ä" -ForegroundColor Green
    } else {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±—Ä–∞–∑–∞:" -ForegroundColor Red
        Write-Host $pushResult -ForegroundColor Red
        exit 1
    }
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ–±—Ä–∞–∑–∞: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞
Write-Host "`nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞..." -ForegroundColor Yellow
try {
    $manifestResult = docker manifest inspect $imageName 2>$null
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ –û–±—Ä–∞–∑ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Ä–µ–µ—Å—Ç—Ä–µ" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –º–∞–Ω–∏—Ñ–µ—Å—Ç –æ–±—Ä–∞–∑–∞" -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –º–∞–Ω–∏—Ñ–µ—Å—Ç –æ–±—Ä–∞–∑–∞" -ForegroundColor Yellow
}

Write-Host "`nüéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
Write-Host "`nüìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±—Ä–∞–∑–µ:" -ForegroundColor Cyan
Write-Host "Registry: cr.yandex/$RegistryId" -ForegroundColor White
Write-Host "Image: domeo-doors:$Tag" -ForegroundColor White
Write-Host "Full name: $imageName" -ForegroundColor White

Write-Host "`nüîó –°—Å—ã–ª–∫–∏:" -ForegroundColor Cyan
Write-Host "–ö–æ–Ω—Å–æ–ª—å Yandex Cloud: https://console.cloud.yandex.ru/container-registry/registries/$RegistryId" -ForegroundColor White
Write-Host "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://cloud.yandex.ru/docs/container-registry/" -ForegroundColor White

Write-Host "`nüìù –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:" -ForegroundColor Cyan
Write-Host "–°–∫–∞—á–∞—Ç—å –æ–±—Ä–∞–∑: docker pull $imageName" -ForegroundColor White
Write-Host "–ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: docker run -p 3000:3000 $imageName" -ForegroundColor White


